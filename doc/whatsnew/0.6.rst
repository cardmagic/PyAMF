**************************
  What's New in PyAMF 0.6
**************************

:Release: 0.6
:Date: |today|

A description here of PyAMF 0.6 and how awesome it is..

.. contents::


Highlighted Features
====================

* The default AMF version has been switched from `AMF0` to `AMF3`.
* Support for `Elixir <http://elixir.ematia.de>`_.


Backward Incompatible API Changes
=================================

* ``__new__`` is used in favour of ``__init__``. See `#700 <http://pyamf.org/ticket/700>`_
* ``pyamf.ClientTypes`` served no purpose and was not compliant with the AMF0
  specification. It has been removed. See `#651 <http://pyamf.org/ticket/651>`_
  for more information.
* ``exceptions`` attribute has been removed from ``Context`` objects and
  ``pyamf.util.IndexedCollection``. Any method that used to raise
  ``pyamf.ReferenceError`` will now return ``None`` for speed.
* ``amf3.Encoder.write*`` methods no longer accept ``use_references``.

Integration
===========

Django
------

* Empty relations are now encoded as ``None``, not ``pyamf.Undefined``.
* All ``model.Model`` fields are now encoded dynamically. See
  `#677 <http://pyamf.org/ticket/677>`_

Google AppEngine
----------------
* All ``db.Model`` properties are now encoded dynamically. See
  `#677 <http://pyamf.org/ticket/677>`_

SQLAlchemy
----------

* All mapped properties are now encoded dynamically. See
  `#677 <http://pyamf.org/ticket/677>`_
