===============
PyAMF Changelog
===============

This file contains information about the changes between the different versions
of PyAMF.

0.1.0b (unreleased)
-------------------

 - Workaround for Python 2.4 float shortcomings (Ticket:78) 
 - Service Browser ('DescribeService' header) requests supported. (Ticket:#138)
 - Remoting client now supports authentication. (Ticket:#137)
 - Proper encoding for aliased subclassed builtin types, specifically
   flex.ArrayCollection.
 - Added support for easy encoding of Django object queries (Foo.objects.all())
 - Added 'add_type' allowing finer grain control of how a class is encoded in
   an AMF stream. (Ticket:130)
 - 'authenticator' keyword added to all gateways (moved from ServiceRequest)
   (Ticket:129)
 - Added 'expose_request' argument to DjangoGateway to expose the underlying
   HTTP Request object as the first arg in the called services. (Ticket:103)

0.1.0a (2007-12-12)
-------------------

 - AMF0 and AMF3 encoders/decoders
 - Additional support for IExternalizable, ArrayCollection,
   ObjectProxy, ByteArray, RecordSet and RemoteObject
 - Remoting gateways for Twisted, WSGI, and Django
 - Authentication/setCredentials support
 - zlib compression support for ByteArray
 - Remoting client with httplib

2007-10-19
----------

 - Started project based on previous work done in the RTMPy (http://rtmpy.org)
   project.
